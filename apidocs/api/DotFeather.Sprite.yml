### YamlMime:ManagedReference
items:
- uid: DotFeather.Sprite
  commentId: T:DotFeather.Sprite
  id: Sprite
  parent: DotFeather
  children:
  - DotFeather.Sprite.#ctor(DotFeather.Texture2D)
  - DotFeather.Sprite.#ctor(DotFeather.Texture2D,DotFeather.Vector,System.Single,DotFeather.Vector,System.Int32,System.String)
  - DotFeather.Sprite.#ctor(DotFeather.Texture2D,System.Int32,System.Int32,System.Single,DotFeather.Vector)
  - DotFeather.Sprite.Destroy
  - DotFeather.Sprite.LoadFrom(System.IO.Stream)
  - DotFeather.Sprite.LoadFrom(System.String)
  - DotFeather.Sprite.Texture
  langs:
  - csharp
  - vb
  name: Sprite
  nameWithType: Sprite
  fullName: DotFeather.Sprite
  type: Class
  source:
    remote:
      path: DotFeather/Graphics/Sprite.cs
      branch: master
      repo: https://github.com/xeltica/dotfeather
    id: Sprite
    path: ../DotFeather/Graphics/Sprite.cs
    startLine: 10
  assemblies:
  - DotFeather
  namespace: DotFeather
  summary: "\nテクスチャを描画する <xref href=\"DotFeather.IDrawable\" data-throw-if-not-resolved=\"false\"></xref> オブジェクトです。\n"
  example: []
  syntax:
    content: 'public class Sprite : TextureDrawableBase, IDrawable'
    content.vb: >-
      Public Class Sprite

          Inherits TextureDrawableBase

          Implements IDrawable
  inheritance:
  - System.Object
  - DotFeather.TextureDrawableBase
  implements:
  - DotFeather.IDrawable
  inheritedMembers:
  - DotFeather.TextureDrawableBase.ZOrder
  - DotFeather.TextureDrawableBase.Name
  - DotFeather.TextureDrawableBase.Location
  - DotFeather.TextureDrawableBase.Angle
  - DotFeather.TextureDrawableBase.Scale
  - DotFeather.TextureDrawableBase.Width
  - DotFeather.TextureDrawableBase.Height
  - DotFeather.TextureDrawableBase.Color
  - DotFeather.TextureDrawableBase.Draw(DotFeather.GameBase,DotFeather.Vector)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DotFeather.Sprite.#ctor(DotFeather.Texture2D,DotFeather.Vector,System.Single,DotFeather.Vector,System.Int32,System.String)
  commentId: M:DotFeather.Sprite.#ctor(DotFeather.Texture2D,DotFeather.Vector,System.Single,DotFeather.Vector,System.Int32,System.String)
  id: '#ctor(DotFeather.Texture2D,DotFeather.Vector,System.Single,DotFeather.Vector,System.Int32,System.String)'
  parent: DotFeather.Sprite
  langs:
  - csharp
  - vb
  name: Sprite(Texture2D, Vector, Single, Vector, Int32, String)
  nameWithType: Sprite.Sprite(Texture2D, Vector, Single, Vector, Int32, String)
  fullName: DotFeather.Sprite.Sprite(DotFeather.Texture2D, DotFeather.Vector, System.Single, DotFeather.Vector, System.Int32, System.String)
  type: Constructor
  source:
    remote:
      path: DotFeather/Graphics/Sprite.cs
      branch: master
      repo: https://github.com/xeltica/dotfeather
    id: .ctor
    path: ../DotFeather/Graphics/Sprite.cs
    startLine: 16
  assemblies:
  - DotFeather
  namespace: DotFeather
  summary: "\n<xref href=\"DotFeather.Sprite\" data-throw-if-not-resolved=\"false\"></xref> クラスの新しいインスタンスを初期化します。\n"
  example: []
  syntax:
    content: public Sprite(Texture2D texture, Vector location, float angle, Vector scale, int zOrder, string name)
    parameters:
    - id: texture
      type: DotFeather.Texture2D
    - id: location
      type: DotFeather.Vector
    - id: angle
      type: System.Single
    - id: scale
      type: DotFeather.Vector
    - id: zOrder
      type: System.Int32
    - id: name
      type: System.String
    content.vb: Public Sub New(texture As Texture2D, location As Vector, angle As Single, scale As Vector, zOrder As Integer, name As String)
  overload: DotFeather.Sprite.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotFeather.Sprite.Texture
  commentId: P:DotFeather.Sprite.Texture
  id: Texture
  parent: DotFeather.Sprite
  langs:
  - csharp
  - vb
  name: Texture
  nameWithType: Sprite.Texture
  fullName: DotFeather.Sprite.Texture
  type: Property
  source:
    remote:
      path: DotFeather/Graphics/Sprite.cs
      branch: master
      repo: https://github.com/xeltica/dotfeather
    id: Texture
    path: ../DotFeather/Graphics/Sprite.cs
    startLine: 30
  assemblies:
  - DotFeather
  namespace: DotFeather
  summary: "\nこの <xref href=\"DotFeather.Sprite\" data-throw-if-not-resolved=\"false\"></xref> が描画するテクスチャを取得または設定します。\n"
  example: []
  syntax:
    content: public Texture2D Texture { get; set; }
    parameters: []
    return:
      type: DotFeather.Texture2D
      description: ''
    content.vb: Public Property Texture As Texture2D
  overload: DotFeather.Sprite.Texture*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DotFeather.Sprite.#ctor(DotFeather.Texture2D,System.Int32,System.Int32,System.Single,DotFeather.Vector)
  commentId: M:DotFeather.Sprite.#ctor(DotFeather.Texture2D,System.Int32,System.Int32,System.Single,DotFeather.Vector)
  id: '#ctor(DotFeather.Texture2D,System.Int32,System.Int32,System.Single,DotFeather.Vector)'
  parent: DotFeather.Sprite
  langs:
  - csharp
  - vb
  name: Sprite(Texture2D, Int32, Int32, Single, Vector)
  nameWithType: Sprite.Sprite(Texture2D, Int32, Int32, Single, Vector)
  fullName: DotFeather.Sprite.Sprite(DotFeather.Texture2D, System.Int32, System.Int32, System.Single, DotFeather.Vector)
  type: Constructor
  source:
    remote:
      path: DotFeather/Graphics/Sprite.cs
      branch: master
      repo: https://github.com/xeltica/dotfeather
    id: .ctor
    path: ../DotFeather/Graphics/Sprite.cs
    startLine: 44
  assemblies:
  - DotFeather
  namespace: DotFeather
  summary: "\n<xref href=\"DotFeather.Sprite\" data-throw-if-not-resolved=\"false\"></xref> クラスの新しいインスタンスを初期化します。\n"
  example: []
  syntax:
    content: public Sprite(Texture2D texture, int x, int y, float angle = 0F, Vector scale = default(Vector))
    parameters:
    - id: texture
      type: DotFeather.Texture2D
      description: この <xref href="DotFeather.Sprite" data-throw-if-not-resolved="false"></xref> が使用するテクスチャ。
    - id: x
      type: System.Int32
      description: 初期位置 X。
    - id: y
      type: System.Int32
      description: 初期位置 Y。
    - id: angle
      type: System.Single
      description: 初期角度。
    - id: scale
      type: DotFeather.Vector
      description: 初期スケール
    content.vb: Public Sub New(texture As Texture2D, x As Integer, y As Integer, angle As Single = 0F, scale As Vector = Nothing)
  overload: DotFeather.Sprite.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotFeather.Sprite.#ctor(DotFeather.Texture2D)
  commentId: M:DotFeather.Sprite.#ctor(DotFeather.Texture2D)
  id: '#ctor(DotFeather.Texture2D)'
  parent: DotFeather.Sprite
  langs:
  - csharp
  - vb
  name: Sprite(Texture2D)
  nameWithType: Sprite.Sprite(Texture2D)
  fullName: DotFeather.Sprite.Sprite(DotFeather.Texture2D)
  type: Constructor
  source:
    remote:
      path: DotFeather/Graphics/Sprite.cs
      branch: master
      repo: https://github.com/xeltica/dotfeather
    id: .ctor
    path: ../DotFeather/Graphics/Sprite.cs
    startLine: 56
  assemblies:
  - DotFeather
  namespace: DotFeather
  summary: "\n<xref href=\"DotFeather.Sprite\" data-throw-if-not-resolved=\"false\"></xref> クラスの新しいインスタンスを初期化します。\n"
  example: []
  syntax:
    content: public Sprite(Texture2D texture)
    parameters:
    - id: texture
      type: DotFeather.Texture2D
      description: この <xref href="DotFeather.Sprite" data-throw-if-not-resolved="false"></xref> が使用するテクスチャ。
    content.vb: Public Sub New(texture As Texture2D)
  overload: DotFeather.Sprite.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotFeather.Sprite.LoadFrom(System.String)
  commentId: M:DotFeather.Sprite.LoadFrom(System.String)
  id: LoadFrom(System.String)
  parent: DotFeather.Sprite
  langs:
  - csharp
  - vb
  name: LoadFrom(String)
  nameWithType: Sprite.LoadFrom(String)
  fullName: DotFeather.Sprite.LoadFrom(System.String)
  type: Method
  source:
    remote:
      path: DotFeather/Graphics/Sprite.cs
      branch: master
      repo: https://github.com/xeltica/dotfeather
    id: LoadFrom
    path: ../DotFeather/Graphics/Sprite.cs
    startLine: 68
  assemblies:
  - DotFeather
  namespace: DotFeather
  summary: "\n指定した画像ファイルから <xref href=\"DotFeather.Sprite\" data-throw-if-not-resolved=\"false\"></xref> を生成します。\n"
  example: []
  syntax:
    content: public static Sprite LoadFrom(string path)
    parameters:
    - id: path
      type: System.String
      description: ファイルパス。
    return:
      type: DotFeather.Sprite
      description: 生成された <xref href="DotFeather.Sprite" data-throw-if-not-resolved="false"></xref>。
    content.vb: Public Shared Function LoadFrom(path As String) As Sprite
  overload: DotFeather.Sprite.LoadFrom*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DotFeather.Sprite.LoadFrom(System.IO.Stream)
  commentId: M:DotFeather.Sprite.LoadFrom(System.IO.Stream)
  id: LoadFrom(System.IO.Stream)
  parent: DotFeather.Sprite
  langs:
  - csharp
  - vb
  name: LoadFrom(Stream)
  nameWithType: Sprite.LoadFrom(Stream)
  fullName: DotFeather.Sprite.LoadFrom(System.IO.Stream)
  type: Method
  source:
    remote:
      path: DotFeather/Graphics/Sprite.cs
      branch: master
      repo: https://github.com/xeltica/dotfeather
    id: LoadFrom
    path: ../DotFeather/Graphics/Sprite.cs
    startLine: 75
  assemblies:
  - DotFeather
  namespace: DotFeather
  summary: "\n指定した画像ファイルから <xref href=\"DotFeather.Sprite\" data-throw-if-not-resolved=\"false\"></xref> を生成します。\n"
  example: []
  syntax:
    content: public static Sprite LoadFrom(Stream stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: ファイルを示すストリーム。
    return:
      type: DotFeather.Sprite
      description: 生成された <xref href="DotFeather.Sprite" data-throw-if-not-resolved="false"></xref>。
    content.vb: Public Shared Function LoadFrom(stream As Stream) As Sprite
  overload: DotFeather.Sprite.LoadFrom*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DotFeather.Sprite.Destroy
  commentId: M:DotFeather.Sprite.Destroy
  id: Destroy
  parent: DotFeather.Sprite
  langs:
  - csharp
  - vb
  name: Destroy()
  nameWithType: Sprite.Destroy()
  fullName: DotFeather.Sprite.Destroy()
  type: Method
  source:
    remote:
      path: DotFeather/Graphics/Sprite.cs
      branch: master
      repo: https://github.com/xeltica/dotfeather
    id: Destroy
    path: ../DotFeather/Graphics/Sprite.cs
    startLine: 80
  assemblies:
  - DotFeather
  namespace: DotFeather
  summary: "\nこの <xref href=\"DotFeather.Sprite\" data-throw-if-not-resolved=\"false\"></xref> を破棄します。\n"
  example: []
  syntax:
    content: public override void Destroy()
    content.vb: Public Overrides Sub Destroy
  overridden: DotFeather.TextureDrawableBase.Destroy
  overload: DotFeather.Sprite.Destroy*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: DotFeather.IDrawable
  commentId: T:DotFeather.IDrawable
  parent: DotFeather
  name: IDrawable
  nameWithType: IDrawable
  fullName: DotFeather.IDrawable
- uid: DotFeather
  commentId: N:DotFeather
  name: DotFeather
  nameWithType: DotFeather
  fullName: DotFeather
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DotFeather.TextureDrawableBase
  commentId: T:DotFeather.TextureDrawableBase
  parent: DotFeather
  name: TextureDrawableBase
  nameWithType: TextureDrawableBase
  fullName: DotFeather.TextureDrawableBase
- uid: DotFeather.TextureDrawableBase.ZOrder
  commentId: P:DotFeather.TextureDrawableBase.ZOrder
  parent: DotFeather.TextureDrawableBase
  name: ZOrder
  nameWithType: TextureDrawableBase.ZOrder
  fullName: DotFeather.TextureDrawableBase.ZOrder
- uid: DotFeather.TextureDrawableBase.Name
  commentId: P:DotFeather.TextureDrawableBase.Name
  parent: DotFeather.TextureDrawableBase
  name: Name
  nameWithType: TextureDrawableBase.Name
  fullName: DotFeather.TextureDrawableBase.Name
- uid: DotFeather.TextureDrawableBase.Location
  commentId: P:DotFeather.TextureDrawableBase.Location
  parent: DotFeather.TextureDrawableBase
  name: Location
  nameWithType: TextureDrawableBase.Location
  fullName: DotFeather.TextureDrawableBase.Location
- uid: DotFeather.TextureDrawableBase.Angle
  commentId: P:DotFeather.TextureDrawableBase.Angle
  parent: DotFeather.TextureDrawableBase
  name: Angle
  nameWithType: TextureDrawableBase.Angle
  fullName: DotFeather.TextureDrawableBase.Angle
- uid: DotFeather.TextureDrawableBase.Scale
  commentId: P:DotFeather.TextureDrawableBase.Scale
  parent: DotFeather.TextureDrawableBase
  name: Scale
  nameWithType: TextureDrawableBase.Scale
  fullName: DotFeather.TextureDrawableBase.Scale
- uid: DotFeather.TextureDrawableBase.Width
  commentId: P:DotFeather.TextureDrawableBase.Width
  parent: DotFeather.TextureDrawableBase
  name: Width
  nameWithType: TextureDrawableBase.Width
  fullName: DotFeather.TextureDrawableBase.Width
- uid: DotFeather.TextureDrawableBase.Height
  commentId: P:DotFeather.TextureDrawableBase.Height
  parent: DotFeather.TextureDrawableBase
  name: Height
  nameWithType: TextureDrawableBase.Height
  fullName: DotFeather.TextureDrawableBase.Height
- uid: DotFeather.TextureDrawableBase.Color
  commentId: P:DotFeather.TextureDrawableBase.Color
  parent: DotFeather.TextureDrawableBase
  name: Color
  nameWithType: TextureDrawableBase.Color
  fullName: DotFeather.TextureDrawableBase.Color
- uid: DotFeather.TextureDrawableBase.Draw(DotFeather.GameBase,DotFeather.Vector)
  commentId: M:DotFeather.TextureDrawableBase.Draw(DotFeather.GameBase,DotFeather.Vector)
  parent: DotFeather.TextureDrawableBase
  name: Draw(GameBase, Vector)
  nameWithType: TextureDrawableBase.Draw(GameBase, Vector)
  fullName: DotFeather.TextureDrawableBase.Draw(DotFeather.GameBase, DotFeather.Vector)
  spec.csharp:
  - uid: DotFeather.TextureDrawableBase.Draw(DotFeather.GameBase,DotFeather.Vector)
    name: Draw
    nameWithType: TextureDrawableBase.Draw
    fullName: DotFeather.TextureDrawableBase.Draw
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotFeather.GameBase
    name: GameBase
    nameWithType: GameBase
    fullName: DotFeather.GameBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotFeather.Vector
    name: Vector
    nameWithType: Vector
    fullName: DotFeather.Vector
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotFeather.TextureDrawableBase.Draw(DotFeather.GameBase,DotFeather.Vector)
    name: Draw
    nameWithType: TextureDrawableBase.Draw
    fullName: DotFeather.TextureDrawableBase.Draw
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotFeather.GameBase
    name: GameBase
    nameWithType: GameBase
    fullName: DotFeather.GameBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotFeather.Vector
    name: Vector
    nameWithType: Vector
    fullName: DotFeather.Vector
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DotFeather.Sprite
  commentId: T:DotFeather.Sprite
  parent: DotFeather
  name: Sprite
  nameWithType: Sprite
  fullName: DotFeather.Sprite
- uid: DotFeather.Sprite.#ctor*
  commentId: Overload:DotFeather.Sprite.#ctor
  name: Sprite
  nameWithType: Sprite.Sprite
  fullName: DotFeather.Sprite.Sprite
- uid: DotFeather.Texture2D
  commentId: T:DotFeather.Texture2D
  parent: DotFeather
  name: Texture2D
  nameWithType: Texture2D
  fullName: DotFeather.Texture2D
- uid: DotFeather.Vector
  commentId: T:DotFeather.Vector
  parent: DotFeather
  name: Vector
  nameWithType: Vector
  fullName: DotFeather.Vector
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DotFeather.Sprite.Texture*
  commentId: Overload:DotFeather.Sprite.Texture
  name: Texture
  nameWithType: Sprite.Texture
  fullName: DotFeather.Sprite.Texture
- uid: DotFeather.Sprite.LoadFrom*
  commentId: Overload:DotFeather.Sprite.LoadFrom
  name: LoadFrom
  nameWithType: Sprite.LoadFrom
  fullName: DotFeather.Sprite.LoadFrom
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: DotFeather.TextureDrawableBase.Destroy
  commentId: M:DotFeather.TextureDrawableBase.Destroy
  parent: DotFeather.TextureDrawableBase
  name: Destroy()
  nameWithType: TextureDrawableBase.Destroy()
  fullName: DotFeather.TextureDrawableBase.Destroy()
  spec.csharp:
  - uid: DotFeather.TextureDrawableBase.Destroy
    name: Destroy
    nameWithType: TextureDrawableBase.Destroy
    fullName: DotFeather.TextureDrawableBase.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotFeather.TextureDrawableBase.Destroy
    name: Destroy
    nameWithType: TextureDrawableBase.Destroy
    fullName: DotFeather.TextureDrawableBase.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotFeather.Sprite.Destroy*
  commentId: Overload:DotFeather.Sprite.Destroy
  name: Destroy
  nameWithType: Sprite.Destroy
  fullName: DotFeather.Sprite.Destroy
