### YamlMime:ManagedReference
items:
- uid: DotFeather.NineSliceSprite
  commentId: T:DotFeather.NineSliceSprite
  id: NineSliceSprite
  parent: DotFeather
  children:
  - DotFeather.NineSliceSprite.#ctor(DotFeather.Texture2D[])
  - DotFeather.NineSliceSprite.Angle
  - DotFeather.NineSliceSprite.Color
  - DotFeather.NineSliceSprite.Destroy
  - DotFeather.NineSliceSprite.Draw(DotFeather.GameBase,DotFeather.Vector)
  - DotFeather.NineSliceSprite.Height
  - DotFeather.NineSliceSprite.LoadFrom(System.String,System.Int32,System.Int32,System.Int32,System.Int32)
  - DotFeather.NineSliceSprite.Location
  - DotFeather.NineSliceSprite.Name
  - DotFeather.NineSliceSprite.Scale
  - DotFeather.NineSliceSprite.Textures
  - DotFeather.NineSliceSprite.Width
  - DotFeather.NineSliceSprite.ZOrder
  langs:
  - csharp
  - vb
  name: NineSliceSprite
  nameWithType: NineSliceSprite
  fullName: DotFeather.NineSliceSprite
  type: Class
  source:
    remote:
      path: DotFeather/Graphics/NineSliceSprite.cs
      branch: master
      repo: https://github.com/xeltica/dotfeather
    id: NineSliceSprite
    path: ../DotFeather/Graphics/NineSliceSprite.cs
    startLine: 12
  assemblies:
  - DotFeather
  namespace: DotFeather
  summary: "\n9 スライステクスチャを描画する <xref href=\"DotFeather.IDrawable\" data-throw-if-not-resolved=\"false\"></xref> オブジェクトです。\n"
  example: []
  syntax:
    content: 'public class NineSliceSprite : IDrawable'
    content.vb: >-
      Public Class NineSliceSprite
          Implements IDrawable
  inheritance:
  - System.Object
  implements:
  - DotFeather.IDrawable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DotFeather.NineSliceSprite.Textures
  commentId: P:DotFeather.NineSliceSprite.Textures
  id: Textures
  parent: DotFeather.NineSliceSprite
  langs:
  - csharp
  - vb
  name: Textures
  nameWithType: NineSliceSprite.Textures
  fullName: DotFeather.NineSliceSprite.Textures
  type: Property
  source:
    remote:
      path: DotFeather/Graphics/NineSliceSprite.cs
      branch: master
      repo: https://github.com/xeltica/dotfeather
    id: Textures
    path: ../DotFeather/Graphics/NineSliceSprite.cs
    startLine: 18
  assemblies:
  - DotFeather
  namespace: DotFeather
  summary: "\n9枚のテクスチャを取得します。\n"
  example: []
  syntax:
    content: public Texture2D[] Textures { get; }
    parameters: []
    return:
      type: DotFeather.Texture2D[]
      description: ''
    content.vb: Public ReadOnly Property Textures As Texture2D()
  overload: DotFeather.NineSliceSprite.Textures*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DotFeather.NineSliceSprite.ZOrder
  commentId: P:DotFeather.NineSliceSprite.ZOrder
  id: ZOrder
  parent: DotFeather.NineSliceSprite
  langs:
  - csharp
  - vb
  name: ZOrder
  nameWithType: NineSliceSprite.ZOrder
  fullName: DotFeather.NineSliceSprite.ZOrder
  type: Property
  source:
    remote:
      path: DotFeather/Graphics/NineSliceSprite.cs
      branch: master
      repo: https://github.com/xeltica/dotfeather
    id: ZOrder
    path: ../DotFeather/Graphics/NineSliceSprite.cs
    startLine: 23
  assemblies:
  - DotFeather
  namespace: DotFeather
  summary: "\nこの <xref href=\"DotFeather.NineSliceSprite\" data-throw-if-not-resolved=\"false\"></xref> の描画優先順位を取得または設定します。数値が低いほど奥に描画されます。\n"
  example: []
  syntax:
    content: public int ZOrder { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ZOrder As Integer
  overload: DotFeather.NineSliceSprite.ZOrder*
  implements:
  - DotFeather.IDrawable.ZOrder
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DotFeather.NineSliceSprite.Name
  commentId: P:DotFeather.NineSliceSprite.Name
  id: Name
  parent: DotFeather.NineSliceSprite
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: NineSliceSprite.Name
  fullName: DotFeather.NineSliceSprite.Name
  type: Property
  source:
    remote:
      path: DotFeather/Graphics/NineSliceSprite.cs
      branch: master
      repo: https://github.com/xeltica/dotfeather
    id: Name
    path: ../DotFeather/Graphics/NineSliceSprite.cs
    startLine: 28
  assemblies:
  - DotFeather
  namespace: DotFeather
  summary: "\nこの <xref href=\"DotFeather.NineSliceSprite\" data-throw-if-not-resolved=\"false\"></xref> の名前を取得または設定します。\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: DotFeather.NineSliceSprite.Name*
  implements:
  - DotFeather.IDrawable.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DotFeather.NineSliceSprite.Location
  commentId: P:DotFeather.NineSliceSprite.Location
  id: Location
  parent: DotFeather.NineSliceSprite
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: NineSliceSprite.Location
  fullName: DotFeather.NineSliceSprite.Location
  type: Property
  source:
    remote:
      path: DotFeather/Graphics/NineSliceSprite.cs
      branch: master
      repo: https://github.com/xeltica/dotfeather
    id: Location
    path: ../DotFeather/Graphics/NineSliceSprite.cs
    startLine: 33
  assemblies:
  - DotFeather
  namespace: DotFeather
  summary: "\nこの <xref href=\"DotFeather.NineSliceSprite\" data-throw-if-not-resolved=\"false\"></xref> の座標を取得または設定します。\n"
  example: []
  syntax:
    content: public Vector Location { get; set; }
    parameters: []
    return:
      type: DotFeather.Vector
    content.vb: Public Property Location As Vector
  overload: DotFeather.NineSliceSprite.Location*
  implements:
  - DotFeather.IDrawable.Location
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DotFeather.NineSliceSprite.Angle
  commentId: P:DotFeather.NineSliceSprite.Angle
  id: Angle
  parent: DotFeather.NineSliceSprite
  langs:
  - csharp
  - vb
  name: Angle
  nameWithType: NineSliceSprite.Angle
  fullName: DotFeather.NineSliceSprite.Angle
  type: Property
  source:
    remote:
      path: DotFeather/Graphics/NineSliceSprite.cs
      branch: master
      repo: https://github.com/xeltica/dotfeather
    id: Angle
    path: ../DotFeather/Graphics/NineSliceSprite.cs
    startLine: 38
  assemblies:
  - DotFeather
  namespace: DotFeather
  summary: "\nこの <xref href=\"DotFeather.NineSliceSprite\" data-throw-if-not-resolved=\"false\"></xref> の角度を取得または設定します。\n"
  example: []
  syntax:
    content: public float Angle { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Angle As Single
  overload: DotFeather.NineSliceSprite.Angle*
  implements:
  - DotFeather.IDrawable.Angle
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DotFeather.NineSliceSprite.Scale
  commentId: P:DotFeather.NineSliceSprite.Scale
  id: Scale
  parent: DotFeather.NineSliceSprite
  langs:
  - csharp
  - vb
  name: Scale
  nameWithType: NineSliceSprite.Scale
  fullName: DotFeather.NineSliceSprite.Scale
  type: Property
  source:
    remote:
      path: DotFeather/Graphics/NineSliceSprite.cs
      branch: master
      repo: https://github.com/xeltica/dotfeather
    id: Scale
    path: ../DotFeather/Graphics/NineSliceSprite.cs
    startLine: 43
  assemblies:
  - DotFeather
  namespace: DotFeather
  summary: "\nこの <xref href=\"DotFeather.NineSliceSprite\" data-throw-if-not-resolved=\"false\"></xref> のスケーリングを取得または設定します。\n"
  example: []
  syntax:
    content: public Vector Scale { get; set; }
    parameters: []
    return:
      type: DotFeather.Vector
    content.vb: Public Property Scale As Vector
  overload: DotFeather.NineSliceSprite.Scale*
  implements:
  - DotFeather.IDrawable.Scale
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DotFeather.NineSliceSprite.Color
  commentId: P:DotFeather.NineSliceSprite.Color
  id: Color
  parent: DotFeather.NineSliceSprite
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: NineSliceSprite.Color
  fullName: DotFeather.NineSliceSprite.Color
  type: Property
  source:
    remote:
      path: DotFeather/Graphics/NineSliceSprite.cs
      branch: master
      repo: https://github.com/xeltica/dotfeather
    id: Color
    path: ../DotFeather/Graphics/NineSliceSprite.cs
    startLine: 48
  assemblies:
  - DotFeather
  namespace: DotFeather
  summary: "\nこの <xref href=\"DotFeather.NineSliceSprite\" data-throw-if-not-resolved=\"false\"></xref> のカラーを取得または設定します。\n"
  example: []
  syntax:
    content: public Color? Color { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Drawing.Color}
    content.vb: Public Property Color As Color?
  overload: DotFeather.NineSliceSprite.Color*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DotFeather.NineSliceSprite.Width
  commentId: P:DotFeather.NineSliceSprite.Width
  id: Width
  parent: DotFeather.NineSliceSprite
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: NineSliceSprite.Width
  fullName: DotFeather.NineSliceSprite.Width
  type: Property
  source:
    remote:
      path: DotFeather/Graphics/NineSliceSprite.cs
      branch: master
      repo: https://github.com/xeltica/dotfeather
    id: Width
    path: ../DotFeather/Graphics/NineSliceSprite.cs
    startLine: 53
  assemblies:
  - DotFeather
  namespace: DotFeather
  summary: "\n幅を取得または設定します。\n"
  example: []
  syntax:
    content: public int Width { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Width As Integer
  overload: DotFeather.NineSliceSprite.Width*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DotFeather.NineSliceSprite.Height
  commentId: P:DotFeather.NineSliceSprite.Height
  id: Height
  parent: DotFeather.NineSliceSprite
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: NineSliceSprite.Height
  fullName: DotFeather.NineSliceSprite.Height
  type: Property
  source:
    remote:
      path: DotFeather/Graphics/NineSliceSprite.cs
      branch: master
      repo: https://github.com/xeltica/dotfeather
    id: Height
    path: ../DotFeather/Graphics/NineSliceSprite.cs
    startLine: 58
  assemblies:
  - DotFeather
  namespace: DotFeather
  summary: "\n高さを取得または設定します。\n"
  example: []
  syntax:
    content: public int Height { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Height As Integer
  overload: DotFeather.NineSliceSprite.Height*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DotFeather.NineSliceSprite.#ctor(DotFeather.Texture2D[])
  commentId: M:DotFeather.NineSliceSprite.#ctor(DotFeather.Texture2D[])
  id: '#ctor(DotFeather.Texture2D[])'
  parent: DotFeather.NineSliceSprite
  langs:
  - csharp
  - vb
  name: NineSliceSprite(Texture2D[])
  nameWithType: NineSliceSprite.NineSliceSprite(Texture2D[])
  fullName: DotFeather.NineSliceSprite.NineSliceSprite(DotFeather.Texture2D[])
  type: Constructor
  source:
    remote:
      path: DotFeather/Graphics/NineSliceSprite.cs
      branch: master
      repo: https://github.com/xeltica/dotfeather
    id: .ctor
    path: ../DotFeather/Graphics/NineSliceSprite.cs
    startLine: 64
  assemblies:
  - DotFeather
  namespace: DotFeather
  summary: "\n<xref href=\"DotFeather.NineSliceSprite\" data-throw-if-not-resolved=\"false\"></xref> クラスの新しいインスタンスを初期化します。\n"
  example: []
  syntax:
    content: public NineSliceSprite(Texture2D[] textures)
    parameters:
    - id: textures
      type: DotFeather.Texture2D[]
    content.vb: Public Sub New(textures As Texture2D())
  overload: DotFeather.NineSliceSprite.#ctor*
  nameWithType.vb: NineSliceSprite.NineSliceSprite(Texture2D())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotFeather.NineSliceSprite.NineSliceSprite(DotFeather.Texture2D())
  name.vb: NineSliceSprite(Texture2D())
- uid: DotFeather.NineSliceSprite.LoadFrom(System.String,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:DotFeather.NineSliceSprite.LoadFrom(System.String,System.Int32,System.Int32,System.Int32,System.Int32)
  id: LoadFrom(System.String,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: DotFeather.NineSliceSprite
  langs:
  - csharp
  - vb
  name: LoadFrom(String, Int32, Int32, Int32, Int32)
  nameWithType: NineSliceSprite.LoadFrom(String, Int32, Int32, Int32, Int32)
  fullName: DotFeather.NineSliceSprite.LoadFrom(System.String, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: DotFeather/Graphics/NineSliceSprite.cs
      branch: master
      repo: https://github.com/xeltica/dotfeather
    id: LoadFrom
    path: ../DotFeather/Graphics/NineSliceSprite.cs
    startLine: 82
  assemblies:
  - DotFeather
  namespace: DotFeather
  summary: "\n指定した画像ファイルから <xref href=\"DotFeather.NineSliceSprite\" data-throw-if-not-resolved=\"false\"></xref> を生成します。\n"
  example: []
  syntax:
    content: public static NineSliceSprite LoadFrom(string path, int left, int top, int right, int bottom)
    parameters:
    - id: path
      type: System.String
      description: ファイルパス。
    - id: left
      type: System.Int32
      description: 左からのピクセル値。
    - id: top
      type: System.Int32
      description: 上からのピクセル値。
    - id: right
      type: System.Int32
      description: 右からのピクセル値。
    - id: bottom
      type: System.Int32
      description: 下からのピクセル値。
    return:
      type: DotFeather.NineSliceSprite
      description: 生成された <xref href="DotFeather.Sprite" data-throw-if-not-resolved="false"></xref>。
    content.vb: Public Shared Function LoadFrom(path As String, left As Integer, top As Integer, right As Integer, bottom As Integer) As NineSliceSprite
  overload: DotFeather.NineSliceSprite.LoadFrom*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DotFeather.NineSliceSprite.Destroy
  commentId: M:DotFeather.NineSliceSprite.Destroy
  id: Destroy
  parent: DotFeather.NineSliceSprite
  langs:
  - csharp
  - vb
  name: Destroy()
  nameWithType: NineSliceSprite.Destroy()
  fullName: DotFeather.NineSliceSprite.Destroy()
  type: Method
  source:
    remote:
      path: DotFeather/Graphics/NineSliceSprite.cs
      branch: master
      repo: https://github.com/xeltica/dotfeather
    id: Destroy
    path: ../DotFeather/Graphics/NineSliceSprite.cs
    startLine: 87
  assemblies:
  - DotFeather
  namespace: DotFeather
  summary: "\nこの <xref href=\"DotFeather.NineSliceSprite\" data-throw-if-not-resolved=\"false\"></xref> を破棄します。\n"
  example: []
  syntax:
    content: public void Destroy()
    content.vb: Public Sub Destroy
  overload: DotFeather.NineSliceSprite.Destroy*
  implements:
  - DotFeather.IDrawable.Destroy
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotFeather.NineSliceSprite.Draw(DotFeather.GameBase,DotFeather.Vector)
  commentId: M:DotFeather.NineSliceSprite.Draw(DotFeather.GameBase,DotFeather.Vector)
  id: Draw(DotFeather.GameBase,DotFeather.Vector)
  parent: DotFeather.NineSliceSprite
  langs:
  - csharp
  - vb
  name: Draw(GameBase, Vector)
  nameWithType: NineSliceSprite.Draw(GameBase, Vector)
  fullName: DotFeather.NineSliceSprite.Draw(DotFeather.GameBase, DotFeather.Vector)
  type: Method
  source:
    remote:
      path: DotFeather/Graphics/NineSliceSprite.cs
      branch: master
      repo: https://github.com/xeltica/dotfeather
    id: Draw
    path: ../DotFeather/Graphics/NineSliceSprite.cs
    startLine: 99
  assemblies:
  - DotFeather
  namespace: DotFeather
  summary: "\nオブジェクトを描画します。\n"
  example: []
  syntax:
    content: public void Draw(GameBase game, Vector location)
    parameters:
    - id: game
      type: DotFeather.GameBase
    - id: location
      type: DotFeather.Vector
    content.vb: Public Sub Draw(game As GameBase, location As Vector)
  overload: DotFeather.NineSliceSprite.Draw*
  implements:
  - DotFeather.IDrawable.Draw(DotFeather.GameBase,DotFeather.Vector)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: DotFeather.IDrawable
  commentId: T:DotFeather.IDrawable
  parent: DotFeather
  name: IDrawable
  nameWithType: IDrawable
  fullName: DotFeather.IDrawable
- uid: DotFeather
  commentId: N:DotFeather
  name: DotFeather
  nameWithType: DotFeather
  fullName: DotFeather
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DotFeather.NineSliceSprite.Textures*
  commentId: Overload:DotFeather.NineSliceSprite.Textures
  name: Textures
  nameWithType: NineSliceSprite.Textures
  fullName: DotFeather.NineSliceSprite.Textures
- uid: DotFeather.Texture2D[]
  isExternal: true
  name: Texture2D[]
  nameWithType: Texture2D[]
  fullName: DotFeather.Texture2D[]
  nameWithType.vb: Texture2D()
  fullName.vb: DotFeather.Texture2D()
  name.vb: Texture2D()
  spec.csharp:
  - uid: DotFeather.Texture2D
    name: Texture2D
    nameWithType: Texture2D
    fullName: DotFeather.Texture2D
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: DotFeather.Texture2D
    name: Texture2D
    nameWithType: Texture2D
    fullName: DotFeather.Texture2D
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: DotFeather.NineSliceSprite
  commentId: T:DotFeather.NineSliceSprite
  parent: DotFeather
  name: NineSliceSprite
  nameWithType: NineSliceSprite
  fullName: DotFeather.NineSliceSprite
- uid: DotFeather.NineSliceSprite.ZOrder*
  commentId: Overload:DotFeather.NineSliceSprite.ZOrder
  name: ZOrder
  nameWithType: NineSliceSprite.ZOrder
  fullName: DotFeather.NineSliceSprite.ZOrder
- uid: DotFeather.IDrawable.ZOrder
  commentId: P:DotFeather.IDrawable.ZOrder
  parent: DotFeather.IDrawable
  name: ZOrder
  nameWithType: IDrawable.ZOrder
  fullName: DotFeather.IDrawable.ZOrder
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: DotFeather.NineSliceSprite.Name*
  commentId: Overload:DotFeather.NineSliceSprite.Name
  name: Name
  nameWithType: NineSliceSprite.Name
  fullName: DotFeather.NineSliceSprite.Name
- uid: DotFeather.IDrawable.Name
  commentId: P:DotFeather.IDrawable.Name
  parent: DotFeather.IDrawable
  name: Name
  nameWithType: IDrawable.Name
  fullName: DotFeather.IDrawable.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DotFeather.NineSliceSprite.Location*
  commentId: Overload:DotFeather.NineSliceSprite.Location
  name: Location
  nameWithType: NineSliceSprite.Location
  fullName: DotFeather.NineSliceSprite.Location
- uid: DotFeather.IDrawable.Location
  commentId: P:DotFeather.IDrawable.Location
  parent: DotFeather.IDrawable
  name: Location
  nameWithType: IDrawable.Location
  fullName: DotFeather.IDrawable.Location
- uid: DotFeather.Vector
  commentId: T:DotFeather.Vector
  parent: DotFeather
  name: Vector
  nameWithType: Vector
  fullName: DotFeather.Vector
- uid: DotFeather.NineSliceSprite.Angle*
  commentId: Overload:DotFeather.NineSliceSprite.Angle
  name: Angle
  nameWithType: NineSliceSprite.Angle
  fullName: DotFeather.NineSliceSprite.Angle
- uid: DotFeather.IDrawable.Angle
  commentId: P:DotFeather.IDrawable.Angle
  parent: DotFeather.IDrawable
  name: Angle
  nameWithType: IDrawable.Angle
  fullName: DotFeather.IDrawable.Angle
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: DotFeather.NineSliceSprite.Scale*
  commentId: Overload:DotFeather.NineSliceSprite.Scale
  name: Scale
  nameWithType: NineSliceSprite.Scale
  fullName: DotFeather.NineSliceSprite.Scale
- uid: DotFeather.IDrawable.Scale
  commentId: P:DotFeather.IDrawable.Scale
  parent: DotFeather.IDrawable
  name: Scale
  nameWithType: IDrawable.Scale
  fullName: DotFeather.IDrawable.Scale
- uid: DotFeather.NineSliceSprite.Color*
  commentId: Overload:DotFeather.NineSliceSprite.Color
  name: Color
  nameWithType: NineSliceSprite.Color
  fullName: DotFeather.NineSliceSprite.Color
- uid: System.Nullable{System.Drawing.Color}
  commentId: T:System.Nullable{System.Drawing.Color}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Color>
  nameWithType: Nullable<Color>
  fullName: System.Nullable<System.Drawing.Color>
  nameWithType.vb: Nullable(Of Color)
  fullName.vb: System.Nullable(Of System.Drawing.Color)
  name.vb: Nullable(Of Color)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Drawing.Color
    name: Color
    nameWithType: Color
    fullName: System.Drawing.Color
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Drawing.Color
    name: Color
    nameWithType: Color
    fullName: System.Drawing.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DotFeather.NineSliceSprite.Width*
  commentId: Overload:DotFeather.NineSliceSprite.Width
  name: Width
  nameWithType: NineSliceSprite.Width
  fullName: DotFeather.NineSliceSprite.Width
- uid: DotFeather.NineSliceSprite.Height*
  commentId: Overload:DotFeather.NineSliceSprite.Height
  name: Height
  nameWithType: NineSliceSprite.Height
  fullName: DotFeather.NineSliceSprite.Height
- uid: DotFeather.NineSliceSprite.#ctor*
  commentId: Overload:DotFeather.NineSliceSprite.#ctor
  name: NineSliceSprite
  nameWithType: NineSliceSprite.NineSliceSprite
  fullName: DotFeather.NineSliceSprite.NineSliceSprite
- uid: DotFeather.Sprite
  commentId: T:DotFeather.Sprite
  parent: DotFeather
  name: Sprite
  nameWithType: Sprite
  fullName: DotFeather.Sprite
- uid: DotFeather.NineSliceSprite.LoadFrom*
  commentId: Overload:DotFeather.NineSliceSprite.LoadFrom
  name: LoadFrom
  nameWithType: NineSliceSprite.LoadFrom
  fullName: DotFeather.NineSliceSprite.LoadFrom
- uid: DotFeather.NineSliceSprite.Destroy*
  commentId: Overload:DotFeather.NineSliceSprite.Destroy
  name: Destroy
  nameWithType: NineSliceSprite.Destroy
  fullName: DotFeather.NineSliceSprite.Destroy
- uid: DotFeather.IDrawable.Destroy
  commentId: M:DotFeather.IDrawable.Destroy
  parent: DotFeather.IDrawable
  name: Destroy()
  nameWithType: IDrawable.Destroy()
  fullName: DotFeather.IDrawable.Destroy()
  spec.csharp:
  - uid: DotFeather.IDrawable.Destroy
    name: Destroy
    nameWithType: IDrawable.Destroy
    fullName: DotFeather.IDrawable.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotFeather.IDrawable.Destroy
    name: Destroy
    nameWithType: IDrawable.Destroy
    fullName: DotFeather.IDrawable.Destroy
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotFeather.NineSliceSprite.Draw*
  commentId: Overload:DotFeather.NineSliceSprite.Draw
  name: Draw
  nameWithType: NineSliceSprite.Draw
  fullName: DotFeather.NineSliceSprite.Draw
- uid: DotFeather.IDrawable.Draw(DotFeather.GameBase,DotFeather.Vector)
  commentId: M:DotFeather.IDrawable.Draw(DotFeather.GameBase,DotFeather.Vector)
  parent: DotFeather.IDrawable
  name: Draw(GameBase, Vector)
  nameWithType: IDrawable.Draw(GameBase, Vector)
  fullName: DotFeather.IDrawable.Draw(DotFeather.GameBase, DotFeather.Vector)
  spec.csharp:
  - uid: DotFeather.IDrawable.Draw(DotFeather.GameBase,DotFeather.Vector)
    name: Draw
    nameWithType: IDrawable.Draw
    fullName: DotFeather.IDrawable.Draw
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotFeather.GameBase
    name: GameBase
    nameWithType: GameBase
    fullName: DotFeather.GameBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotFeather.Vector
    name: Vector
    nameWithType: Vector
    fullName: DotFeather.Vector
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotFeather.IDrawable.Draw(DotFeather.GameBase,DotFeather.Vector)
    name: Draw
    nameWithType: IDrawable.Draw
    fullName: DotFeather.IDrawable.Draw
  - name: (
    nameWithType: (
    fullName: (
  - uid: DotFeather.GameBase
    name: GameBase
    nameWithType: GameBase
    fullName: DotFeather.GameBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotFeather.Vector
    name: Vector
    nameWithType: Vector
    fullName: DotFeather.Vector
  - name: )
    nameWithType: )
    fullName: )
- uid: DotFeather.GameBase
  commentId: T:DotFeather.GameBase
  parent: DotFeather
  name: GameBase
  nameWithType: GameBase
  fullName: DotFeather.GameBase
