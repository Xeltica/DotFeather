### YamlMime:ManagedReference
items:
- uid: DotFeather.CoroutineRunner
  commentId: T:DotFeather.CoroutineRunner
  id: CoroutineRunner
  parent: DotFeather
  children:
  - DotFeather.CoroutineRunner.Start(System.Collections.IEnumerator)
  - DotFeather.CoroutineRunner.Stop(DotFeather.Coroutine)
  - DotFeather.CoroutineRunner.ToYieldInstruction(System.Object)
  langs:
  - csharp
  - vb
  name: CoroutineRunner
  nameWithType: CoroutineRunner
  fullName: DotFeather.CoroutineRunner
  type: Class
  source:
    remote:
      path: DotFeather/Coroutines/CoroutineRunner.cs
      branch: master
      repo: https://github.com/xeltica/dotfeather
    id: CoroutineRunner
    path: ../DotFeather/Coroutines/CoroutineRunner.cs
    startLine: 10
  assemblies:
  - DotFeather
  namespace: DotFeather
  summary: "\nコルーチンを管理する静的クラスです。\n"
  example: []
  syntax:
    content: public static class CoroutineRunner
    content.vb: Public Module CoroutineRunner
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: DotFeather.CoroutineRunner.Start(System.Collections.IEnumerator)
  commentId: M:DotFeather.CoroutineRunner.Start(System.Collections.IEnumerator)
  id: Start(System.Collections.IEnumerator)
  parent: DotFeather.CoroutineRunner
  langs:
  - csharp
  - vb
  name: Start(IEnumerator)
  nameWithType: CoroutineRunner.Start(IEnumerator)
  fullName: DotFeather.CoroutineRunner.Start(System.Collections.IEnumerator)
  type: Method
  source:
    remote:
      path: DotFeather/Coroutines/CoroutineRunner.cs
      branch: master
      repo: https://github.com/xeltica/dotfeather
    id: Start
    path: ../DotFeather/Coroutines/CoroutineRunner.cs
    startLine: 15
  assemblies:
  - DotFeather
  namespace: DotFeather
  summary: "\nコルーチンを開始します。\n"
  example: []
  syntax:
    content: public static Coroutine Start(IEnumerator coroutine)
    parameters:
    - id: coroutine
      type: System.Collections.IEnumerator
    return:
      type: DotFeather.Coroutine
    content.vb: Public Shared Function Start(coroutine As IEnumerator) As Coroutine
  overload: DotFeather.CoroutineRunner.Start*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DotFeather.CoroutineRunner.Stop(DotFeather.Coroutine)
  commentId: M:DotFeather.CoroutineRunner.Stop(DotFeather.Coroutine)
  id: Stop(DotFeather.Coroutine)
  parent: DotFeather.CoroutineRunner
  langs:
  - csharp
  - vb
  name: Stop(Coroutine)
  nameWithType: CoroutineRunner.Stop(Coroutine)
  fullName: DotFeather.CoroutineRunner.Stop(DotFeather.Coroutine)
  type: Method
  source:
    remote:
      path: DotFeather/Coroutines/CoroutineRunner.cs
      branch: master
      repo: https://github.com/xeltica/dotfeather
    id: Stop
    path: ../DotFeather/Coroutines/CoroutineRunner.cs
    startLine: 26
  assemblies:
  - DotFeather
  namespace: DotFeather
  summary: "\nコルーチンを停止します。\n"
  example: []
  syntax:
    content: public static void Stop(Coroutine coroutine)
    parameters:
    - id: coroutine
      type: DotFeather.Coroutine
    content.vb: Public Shared Sub Stop(coroutine As Coroutine)
  overload: DotFeather.CoroutineRunner.Stop*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DotFeather.CoroutineRunner.ToYieldInstruction(System.Object)
  commentId: M:DotFeather.CoroutineRunner.ToYieldInstruction(System.Object)
  id: ToYieldInstruction(System.Object)
  parent: DotFeather.CoroutineRunner
  langs:
  - csharp
  - vb
  name: ToYieldInstruction(Object)
  nameWithType: CoroutineRunner.ToYieldInstruction(Object)
  fullName: DotFeather.CoroutineRunner.ToYieldInstruction(System.Object)
  type: Method
  source:
    remote:
      path: DotFeather/Coroutines/CoroutineRunner.cs
      branch: master
      repo: https://github.com/xeltica/dotfeather
    id: ToYieldInstruction
    path: ../DotFeather/Coroutines/CoroutineRunner.cs
    startLine: 63
  assemblies:
  - DotFeather
  namespace: DotFeather
  summary: "\n任意のオブジェクトをイールド命令に変換します。\n"
  example: []
  syntax:
    content: public static YieldInstruction ToYieldInstruction(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: DotFeather.YieldInstruction
      description: イールド命令であればそのまま、<xref href="System.Collections.IEnumerator" data-throw-if-not-resolved="false"></xref> であればコルーチン、その他であれば <xref href="DotFeather.WaitUntilNextFrame" data-throw-if-not-resolved="false"></xref> のインスタンスを返します。
    content.vb: Public Shared Function ToYieldInstruction(obj As Object) As YieldInstruction
  overload: DotFeather.CoroutineRunner.ToYieldInstruction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: DotFeather
  commentId: N:DotFeather
  name: DotFeather
  nameWithType: DotFeather
  fullName: DotFeather
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DotFeather.CoroutineRunner.Start*
  commentId: Overload:DotFeather.CoroutineRunner.Start
  name: Start
  nameWithType: CoroutineRunner.Start
  fullName: DotFeather.CoroutineRunner.Start
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: DotFeather.Coroutine
  commentId: T:DotFeather.Coroutine
  parent: DotFeather
  name: Coroutine
  nameWithType: Coroutine
  fullName: DotFeather.Coroutine
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: DotFeather.CoroutineRunner.Stop*
  commentId: Overload:DotFeather.CoroutineRunner.Stop
  name: Stop
  nameWithType: CoroutineRunner.Stop
  fullName: DotFeather.CoroutineRunner.Stop
- uid: DotFeather.WaitUntilNextFrame
  commentId: T:DotFeather.WaitUntilNextFrame
  name: WaitUntilNextFrame
  nameWithType: WaitUntilNextFrame
  fullName: DotFeather.WaitUntilNextFrame
- uid: DotFeather.CoroutineRunner.ToYieldInstruction*
  commentId: Overload:DotFeather.CoroutineRunner.ToYieldInstruction
  name: ToYieldInstruction
  nameWithType: CoroutineRunner.ToYieldInstruction
  fullName: DotFeather.CoroutineRunner.ToYieldInstruction
- uid: DotFeather.YieldInstruction
  commentId: T:DotFeather.YieldInstruction
  parent: DotFeather
  name: YieldInstruction
  nameWithType: YieldInstruction
  fullName: DotFeather.YieldInstruction
